# Generated by Django 4.1.7 on 2023-03-05 14:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funds', models.IntegerField(default=0)),
                ('satisfaction', models.SmallIntegerField(default=0)),
                ('se_relation', models.SmallIntegerField(default=0)),
                ('nlr_relation', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('tradable', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('recipe_type', models.PositiveSmallIntegerField(choices=[(1, 'Basic Actions'), (2, 'Resource Extraction'), (3, 'Resource Conversion'), (4, 'Satisfaction Buildings'), (5, 'Factories'), (6, 'Manufacturing'), (7, 'Military'), (8, 'Superpower Relations'), (9, 'Special')])),
                ('region', models.PositiveSmallIntegerField(choices=[(0, 'Any'), (1, 'Burrozil'), (2, 'Zebrica'), (3, 'Saddle Arabia'), (4, 'Przewalskia')])),
                ('subregion', models.PositiveSmallIntegerField(choices=[(0, 'Any'), (1, 'North'), (2, 'Central'), (3, 'South')])),
                ('consumes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes_consumes', to='items.bundle')),
                ('produces', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recipes_produces', to='items.bundle')),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('satisfaction_on_destroy', models.SmallIntegerField(default=0)),
                ('softcap', models.PositiveSmallIntegerField(default=0)),
                ('softcap_divider', models.PositiveSmallIntegerField(default=1)),
                ('consumes', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buildings_consumes', to='items.bundle')),
                ('produces', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buildings_produces', to='items.bundle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BundleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.PositiveIntegerField()),
                ('amount', models.SmallIntegerField(default=1)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='items.bundle')),
                ('item_type', models.ForeignKey(limit_choices_to={'model__in': ('resource', 'building')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('item_type', 'item_id')},
            },
        ),
    ]
