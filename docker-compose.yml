secrets:
  django_secret_key:
    file: $SECRETS_DIR/django_secret_key
  postgres_password:
    file: $SECRETS_DIR/postgres_password
  redis_password:
    file: $SECRETS_DIR/redis_password

volumes:
  static:
  media:
  frontend:
  postgres:
  redis:
  caddy_data:
  caddy_config:

networks:
  default:
  internal:
    internal: true

services:
  web: &web
    build: webserver/.
    container_name: clop-web
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    expose:
      - 8000
    volumes:
      - static:/home/app/staticfiles
      - media:/home/app/media
      - frontend:/home/app/webserver/frontend
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_started
    secrets:
      - django_secret_key
      - postgres_password
      - redis_password
    environment:
      DOMAIN_NAME: $DOMAIN_NAME
      # Database
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: $POSTGRES_NAME
      DB_USER: $POSTGRES_USER
      DB_HOST: db
      DB_PORT: 5432
      # Cache
      REDIS_HOST: cache
      REDIS_PORT: 6379
      # Secrets
      DJANGO_SECRET_KEY_FILE: /run/secrets/django_secret_key
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      REDIS_PASSWORD_FILE: /run/secrets/redis_password

  queue_worker:
    <<: *web
    container_name: clop-queue-worker
    entrypoint: python manage.py qcluster

  frontend:
    build: frontend/.
    container_name: clop-frontend
    security_opt:
      - no-new-privileges:true
    volumes:
      - frontend:/home/app/web/build

  db:
    image: postgres:15-alpine
    container_name: clop-db
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data/
    secrets:
      - postgres_password
    environment:
      POSTGRES_DB: $POSTGRES_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}'"]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7
    container_name: clop-cache
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
    expose:
      - 6379
    volumes:
      - redis:/data
    secrets:
      - redis_password
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
    command: [
      "bash", "-c",
      '
      docker-entrypoint.sh
      --requirepass "$$(cat $$REDIS_PASSWORD_FILE)"
      '
    ]

  caddy:
    image: caddy:2.6-alpine
    container_name: clop-caddy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - internal
      - default
    ports:
      - "8088:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - static:/fileserver/static
      - media:/fileserver/media
    environment:
      DOMAIN_NAME: $DOMAIN_NAME
